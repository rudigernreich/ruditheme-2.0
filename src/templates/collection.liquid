{% include 'collection-nav' %}

{% paginate collection.products by 5 %}
  <div class="grid endless-scroll clearfix" id="collection-grid">
    {% for product in collection.products %}
      <div class="grid__item small--one-whole small--padding-top-default">
        {% if product.featured_image != blank %}
          <a href="{{ product.url | within: collection }}">
                        {% assign img_url = product.featured_image.src | img_url: '1x1' | replace: '_1x1.', '_{width}x.' %}
                        <img id="{{ img_id }}"
                            class="lazyload"
                            src="{{ product.featured_image.src | img_url: '200x' }}"
                            data-src="{{ img_url }}"
                            data-widths="[180, 360, 540, 720, 800, 900, 1080, 1296, 1512, 1728, 2048]"
                            data-aspectratio="{{ product.featured_image.src.aspect_ratio }}"
                            data-sizes="auto"
                            data-parent-fit="cover"
                            alt="{{ product.featured_image.src.alt | escape }}">
          </a>
        {% endif %}

        <p>
          <a href="{{ product.url | within: collection }}">{{ product.title }}</a>
          <br>
          {% if product.compare_at_price > product.price %}

            {% if product.price_varies %}
              {%- assign sale_price = product.price | money -%}
              {{ 'products.product.on_sale_from_html' | t: price: sale_price }}
            {% else %}
              {{ 'products.product.on_sale' | t }}
              {{ product.price | money_with_currency }}
            {% endif %}

          {% else %}

            {% if product.price_varies %}
              {%- assign price = product.price | money -%}
              {{ 'products.product.from_text_html' | t: price: price }}
            {% else %}
              {{ product.price | money_with_currency }}
            {% endif %}

          {% endif %}

          {% if product.compare_at_price > product.price %}
            <span class="visually-hidden">{{ 'products.product.regular_price' | t }}</span>
            <s>{{ product.compare_at_price | money_with_currency }}</s>
          {% endif %}

          {% unless product.available %}
            {{ 'products.product.sold_out' | t }}
          {% endunless %}
        </p>
      </div>

    {% else %}
      {% if collection.handle == 'all' and collection.all_vendors.size == 0 and collection.all_types.size == 0 %}
        {% for i in (1..8) %}
          <a href="#">
            {% capture current %}{% cycle 1, 2, 3, 4, 5, 6 %}{% endcapture %}
            {{ 'product-' | append: current | placeholder_svg_tag: 'placeholder-svg placeholder-svg--small' }}
          </a>

          <p>
            <a href="#">{{ 'homepage.onboarding.product_title' | t }}</a><br><br>
            {{ 1999 | money_with_currency }}
          </p>
        {% endfor %}
      {% else %}
        <p>{{ 'collections.general.no_matches' | t }}</p>
      {% endif %}

    {% endfor %}
  </div>

  <div class="endless-pagination clearfix">
    {% if paginate.next %}
      <a href="{{ paginate.next.url }}">Loading More</a>
    {% endif %}
  </div>
  {% endpaginate %}

<script>
function addCss() {
  var classes = [
    "one-half",
    "four-twelfths",
    "three-twelfths",
    "four-twelfths",
    "four-twelfths"
  ]
  var offset = [
    "medium-up--push-none",
    "medium-up--push-two-twelfths",
    "medium-up--push-two-twelfths",
    "medium-up--push-two-twelfths",
    "medium-up--push-three-twelfths"
  ]
  var spacing = [
    "medium-up--padding-top-none",
    "medium-up--padding-top-none",
    "medium-up--padding-top-one",
    "medium-up--padding-top-two",
    "medium-up--padding-top-two"
  ]

  var grid = document.getElementById("collection-grid").children;
  
  var i;
  for (i = 0; i < grid.length; i++) {
      var remainder = i%5;
      grid[i].classList.add(classes[remainder], offset[remainder], spacing[remainder]);
  }
}

document.addEventListener("DOMContentLoaded", function() {
  addCss();
});

var isInViewport = function (elem) {
  var bounding = elem.getBoundingClientRect();
    return (
      bounding.top >= 0 &&
      bounding.left >= 0 &&
      bounding.bottom <= (window.innerHeight || document.documentElement.clientHeight) &&
      bounding.right <= (window.innerWidth || document.documentElement.clientWidth)
    );
};

var ep = document.querySelector('.endless-pagination');

function handleScroll(event) {
 if (isInViewport(ep)) {
    window.removeEventListener('scroll', handleScroll, false);
    var nextPageUrl = ep.childNodes[1].getAttribute('href');
    var req = new XMLHttpRequest();
    req.onreadystatechange = function success() {
       if (req.readyState === 4 && req.status === 200) {
        const newContainer = req.responseXML.querySelector('#collection-grid');
        const newPagination = req.responseXML.querySelectorAll('.endless-pagination');
        console.log(newPagination[0]);
        document.getElementById("collection-grid").insertAdjacentHTML('beforeend', newContainer.innerHTML);
        ep.innerHTML = newPagination[0].innerHTML;
        addCss();
        window.addEventListener('scroll', handleScroll, false);
       }
    }
    req.open('GET', nextPageUrl);
    req.responseType = 'document';
    req.send();
    }
}

window.addEventListener('scroll', handleScroll, false);


</script>

